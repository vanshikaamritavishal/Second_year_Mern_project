{"ast":null,"code":"var _jsxFileName = \"D:\\\\SCALER\\\\second_year\\\\Project\\\\skillsync\\\\frontend\\\\src\\\\pages\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { db } from \"../firebase\";\nimport { collection, query, where, getDocs, updateDoc, doc, orderBy, addDoc, onSnapshot, serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Messages() {\n  _s();\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [requests, setRequests] = useState([]);\n  const [acceptedUsers, setAcceptedUsers] = useState([]); // users you can chat with\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [allUsers, setAllUsers] = useState([]); // to map Google IDs to names\n\n  // Fetch all users to map names\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      const snapshot = await getDocs(collection(db, \"users\"));\n      const users = snapshot.docs.map(doc => doc.data());\n      setAllUsers(users);\n    };\n    fetchAllUsers();\n  }, []);\n\n  // Fetch incoming requests\n  useEffect(() => {\n    const q = query(collection(db, \"requests\"), where(\"toId\", \"==\", user.googleId));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const reqs = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setRequests(reqs.filter(r => r.status === \"pending\"));\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // Fetch accepted chats\n  useEffect(() => {\n    const q = query(collection(db, \"requests\"), where(\"status\", \"==\", \"accepted\"));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const accepted = snapshot.docs.map(doc => doc.data()).filter(r => r.fromId === user.googleId || r.toId === user.googleId).map(r => {\n        const otherId = r.fromId === user.googleId ? r.toId : r.fromId;\n        const otherUser = allUsers.find(u => u.googleId === otherId);\n        return otherUser ? {\n          id: otherId,\n          name: otherUser.name\n        } : null;\n      }).filter(Boolean);\n      setAcceptedUsers(accepted);\n    });\n    return () => unsubscribe();\n  }, [allUsers]);\n\n  // Fetch messages for selected user\n  useEffect(() => {\n    if (!selectedUser) return;\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\n    const q = query(collection(db, \"messages\"), where(\"chatId\", \"==\", chatId), orderBy(\"timestamp\"));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const msgs = snapshot.docs.map(doc => doc.data());\n      setMessages(msgs);\n    });\n    return () => unsubscribe();\n  }, [selectedUser]);\n  const acceptRequest = async req => {\n    const requestRef = doc(db, \"requests\", req.id);\n    await updateDoc(requestRef, {\n      status: \"accepted\"\n    });\n  };\n  const rejectRequest = async req => {\n    const requestRef = doc(db, \"requests\", req.id);\n    await updateDoc(requestRef, {\n      status: \"rejected\"\n    });\n  };\n  const sendMessage = async () => {\n    if (!newMessage.trim()) return;\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\n    await addDoc(collection(db, \"messages\"), {\n      chatId,\n      fromId: user.googleId,\n      toId: selectedUser.id,\n      message: newMessage,\n      timestamp: serverTimestamp()\n    });\n    setNewMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Messages & Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Incoming Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), requests.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }, this), requests.map(req => {\n      const fromUser = allUsers.find(u => u.googleId === req.fromId);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ddd\",\n          padding: \"10px\",\n          margin: \"10px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Request from: \", (fromUser === null || fromUser === void 0 ? void 0 : fromUser.name) || req.fromId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptRequest(req),\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => rejectRequest(req),\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, req.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), acceptedUsers.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No chats yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"10px\",\n        marginBottom: \"20px\"\n      },\n      children: acceptedUsers.map(u => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedUser(u),\n        children: u.name\n      }, u.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Chat with \", selectedUser.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ddd\",\n          padding: \"10px\",\n          height: \"300px\",\n          overflowY: \"scroll\",\n          marginBottom: \"10px\"\n        },\n        children: messages.map((msg, idx) => {\n          const senderName = msg.fromId === user.googleId ? \"You\" : selectedUser.name;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: msg.fromId === user.googleId ? \"right\" : \"left\",\n              margin: \"5px 0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: \"inline-block\",\n                padding: \"6px 10px\",\n                borderRadius: \"12px\",\n                background: msg.fromId === user.googleId ? \"#4CAF50\" : \"#ddd\",\n                color: msg.fromId === user.googleId ? \"#fff\" : \"#000\"\n              },\n              children: [senderName, \": \", msg.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        style: {\n          padding: \"8px\",\n          width: \"80%\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          padding: \"8px\"\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(Messages, \"tllbsC0qSfAx2u7yQOa5zCUqSLk=\");\n_c = Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","query","where","getDocs","updateDoc","doc","orderBy","addDoc","onSnapshot","serverTimestamp","jsxDEV","_jsxDEV","Messages","_s","user","JSON","parse","localStorage","getItem","requests","setRequests","acceptedUsers","setAcceptedUsers","selectedUser","setSelectedUser","messages","setMessages","newMessage","setNewMessage","allUsers","setAllUsers","fetchAllUsers","snapshot","users","docs","map","data","q","googleId","unsubscribe","reqs","id","filter","r","status","accepted","fromId","toId","otherId","otherUser","find","u","name","Boolean","chatId","sort","join","msgs","acceptRequest","req","requestRef","rejectRequest","sendMessage","trim","message","timestamp","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","length","fromUser","border","margin","onClick","display","gap","marginBottom","height","overflowY","msg","idx","senderName","textAlign","borderRadius","background","color","type","value","onChange","e","target","placeholder","width","marginRight","_c","$RefreshReg$"],"sources":["D:/SCALER/second_year/Project/skillsync/frontend/src/pages/Messages.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  updateDoc,\r\n  doc,\r\n  orderBy,\r\n  addDoc,\r\n  onSnapshot,\r\n  serverTimestamp\r\n} from \"firebase/firestore\";\r\n\r\nexport default function Messages() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [requests, setRequests] = useState([]);\r\n  const [acceptedUsers, setAcceptedUsers] = useState([]); // users you can chat with\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [allUsers, setAllUsers] = useState([]); // to map Google IDs to names\r\n\r\n  // Fetch all users to map names\r\n  useEffect(() => {\r\n    const fetchAllUsers = async () => {\r\n      const snapshot = await getDocs(collection(db, \"users\"));\r\n      const users = snapshot.docs.map((doc) => doc.data());\r\n      setAllUsers(users);\r\n    };\r\n    fetchAllUsers();\r\n  }, []);\r\n\r\n  // Fetch incoming requests\r\n  useEffect(() => {\r\n    const q = query(collection(db, \"requests\"), where(\"toId\", \"==\", user.googleId));\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      const reqs = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n      setRequests(reqs.filter(r => r.status === \"pending\"));\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Fetch accepted chats\r\n  useEffect(() => {\r\n    const q = query(collection(db, \"requests\"), where(\"status\", \"==\", \"accepted\"));\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      const accepted = snapshot.docs\r\n        .map(doc => doc.data())\r\n        .filter(r => r.fromId === user.googleId || r.toId === user.googleId)\r\n        .map(r => {\r\n          const otherId = r.fromId === user.googleId ? r.toId : r.fromId;\r\n          const otherUser = allUsers.find(u => u.googleId === otherId);\r\n          return otherUser ? { id: otherId, name: otherUser.name } : null;\r\n        })\r\n        .filter(Boolean);\r\n      setAcceptedUsers(accepted);\r\n    });\r\n    return () => unsubscribe();\r\n  }, [allUsers]);\r\n\r\n  // Fetch messages for selected user\r\n  useEffect(() => {\r\n    if (!selectedUser) return;\r\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\r\n    const q = query(collection(db, \"messages\"), where(\"chatId\", \"==\", chatId), orderBy(\"timestamp\"));\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      const msgs = snapshot.docs.map(doc => doc.data());\r\n      setMessages(msgs);\r\n    });\r\n    return () => unsubscribe();\r\n  }, [selectedUser]);\r\n\r\n  const acceptRequest = async (req) => {\r\n    const requestRef = doc(db, \"requests\", req.id);\r\n    await updateDoc(requestRef, { status: \"accepted\" });\r\n  };\r\n\r\n  const rejectRequest = async (req) => {\r\n    const requestRef = doc(db, \"requests\", req.id);\r\n    await updateDoc(requestRef, { status: \"rejected\" });\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!newMessage.trim()) return;\r\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\r\n    await addDoc(collection(db, \"messages\"), {\r\n      chatId,\r\n      fromId: user.googleId,\r\n      toId: selectedUser.id,\r\n      message: newMessage,\r\n      timestamp: serverTimestamp(),\r\n    });\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1>Messages & Requests</h1>\r\n\r\n      {/* Incoming Requests */}\r\n      <h2>Incoming Requests</h2>\r\n      {requests.length === 0 && <p>No requests</p>}\r\n      {requests.map((req) => {\r\n        const fromUser = allUsers.find(u => u.googleId === req.fromId);\r\n        return (\r\n          <div key={req.id} style={{ border: \"1px solid #ddd\", padding: \"10px\", margin: \"10px 0\" }}>\r\n            <p>Request from: {fromUser?.name || req.fromId}</p>\r\n            <button onClick={() => acceptRequest(req)}>Accept</button>\r\n            <button onClick={() => rejectRequest(req)}>Reject</button>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {/* Chat List */}\r\n      <h2>Chats</h2>\r\n      {acceptedUsers.length === 0 && <p>No chats yet</p>}\r\n      <div style={{ display: \"flex\", gap: \"10px\", marginBottom: \"20px\" }}>\r\n        {acceptedUsers.map((u) => (\r\n          <button key={u.id} onClick={() => setSelectedUser(u)}>\r\n            {u.name}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat Window */}\r\n      {selectedUser && (\r\n        <div>\r\n          <h3>Chat with {selectedUser.name}</h3>\r\n          <div\r\n            style={{\r\n              border: \"1px solid #ddd\",\r\n              padding: \"10px\",\r\n              height: \"300px\",\r\n              overflowY: \"scroll\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            {messages.map((msg, idx) => {\r\n              const senderName = msg.fromId === user.googleId ? \"You\" : selectedUser.name;\r\n              return (\r\n                <div\r\n                  key={idx}\r\n                  style={{\r\n                    textAlign: msg.fromId === user.googleId ? \"right\" : \"left\",\r\n                    margin: \"5px 0\",\r\n                  }}\r\n                >\r\n                  <span\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      padding: \"6px 10px\",\r\n                      borderRadius: \"12px\",\r\n                      background: msg.fromId === user.googleId ? \"#4CAF50\" : \"#ddd\",\r\n                      color: msg.fromId === user.googleId ? \"#fff\" : \"#000\",\r\n                    }}\r\n                  >\r\n                    {senderName}: {msg.message}\r\n                  </span>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Type a message...\"\r\n            style={{ padding: \"8px\", width: \"80%\", marginRight: \"10px\" }}\r\n          />\r\n          <button onClick={sendMessage} style={{ padding: \"8px\" }}>\r\n            Send\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}