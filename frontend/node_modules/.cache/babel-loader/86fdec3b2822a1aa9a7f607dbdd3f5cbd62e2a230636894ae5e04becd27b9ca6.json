{"ast":null,"code":"var _jsxFileName = \"D:\\\\SCALER\\\\second_year\\\\Project\\\\skillsync\\\\frontend\\\\src\\\\pages\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { db, auth } from \"../firebase\";\nimport { collection, addDoc, query, orderBy, onSnapshot, serverTimestamp } from \"firebase/firestore\";\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Messages({\n  chatId,\n  currentUser,\n  recipient\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messagesEndRef = useRef(null);\n\n  // 🧠 Fetch messages in real time\n  useEffect(() => {\n    if (!chatId) return;\n    const messagesRef = collection(db, \"chats\", chatId, \"messages\");\n    const q = query(messagesRef, orderBy(\"createdAt\", \"asc\"));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const msgs = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setMessages(msgs);\n\n      // Trigger notification for new incoming message\n      const lastMsg = msgs[msgs.length - 1];\n      if (lastMsg && lastMsg.senderId !== currentUser.uid) {\n        toast(`💬 New message from ${(recipient === null || recipient === void 0 ? void 0 : recipient.name) || \"a user\"}`, {\n          icon: \"🔔\",\n          duration: 4000\n        });\n      }\n    });\n    return () => unsubscribe();\n  }, [chatId, currentUser.uid, recipient === null || recipient === void 0 ? void 0 : recipient.name]);\n\n  // 🪄 Auto scroll to bottom on new message\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // ✉️ Send message\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    try {\n      const msgData = {\n        text: newMessage,\n        senderId: currentUser.uid,\n        senderName: currentUser.displayName,\n        createdAt: serverTimestamp()\n      };\n      await addDoc(collection(db, \"chats\", chatId, \"messages\"), msgData);\n      setNewMessage(\"\");\n      toast(\"📤 Message sent!\", {\n        icon: \"✅\",\n        duration: 2000\n      });\n    } catch (err) {\n      console.error(\"Failed to send message:\", err);\n      toast.error(\"Failed to send message. Try again.\");\n    }\n  };\n\n  // ⚡ Show notification when chat is opened\n  useEffect(() => {\n    if (recipient !== null && recipient !== void 0 && recipient.name) toast(`💬 Chat opened with ${recipient.name}`, {\n      icon: \"📨\",\n      duration: 2000\n    });\n  }, [recipient === null || recipient === void 0 ? void 0 : recipient.name]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      maxWidth: \"600px\",\n      margin: \"0 auto\",\n      padding: \"20px\",\n      borderRadius: \"10px\",\n      background: \"#f5f7fa\",\n      boxShadow: \"0 2px 12px rgba(0,0,0,0.1)\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"80vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"10px\"\n      },\n      children: [\"Chat with \", (recipient === null || recipient === void 0 ? void 0 : recipient.name) || \"User\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1,\n        overflowY: \"auto\",\n        padding: \"10px\",\n        borderRadius: \"8px\",\n        background: \"#fff\"\n      },\n      children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\",\n          display: \"flex\",\n          justifyContent: msg.senderId === currentUser.uid ? \"flex-end\" : \"flex-start\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: msg.senderId === currentUser.uid ? \"#4CAF50\" : \"#e0e0e0\",\n            color: msg.senderId === currentUser.uid ? \"#fff\" : \"#000\",\n            padding: \"10px 14px\",\n            borderRadius: \"15px\",\n            maxWidth: \"70%\",\n            wordWrap: \"break-word\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      style: {\n        display: \"flex\",\n        marginTop: \"10px\",\n        gap: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        style: {\n          flex: 1,\n          padding: \"10px\",\n          borderRadius: \"8px\",\n          border: \"1px solid #ccc\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: \"10px 16px\",\n          border: \"none\",\n          borderRadius: \"8px\",\n          background: \"#4CAF50\",\n          color: \"#fff\",\n          cursor: \"pointer\"\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Messages, \"zg+GxpNyxpK9cchXwbnUe/kaofI=\");\n_c = Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","useRef","db","auth","collection","addDoc","query","orderBy","onSnapshot","serverTimestamp","toast","jsxDEV","_jsxDEV","Messages","chatId","currentUser","recipient","_s","messages","setMessages","newMessage","setNewMessage","messagesEndRef","messagesRef","q","unsubscribe","snapshot","msgs","docs","map","doc","id","data","lastMsg","length","senderId","uid","name","icon","duration","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","e","preventDefault","trim","msgData","text","senderName","displayName","createdAt","err","console","error","style","width","maxWidth","margin","padding","borderRadius","background","boxShadow","display","flexDirection","height","children","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","overflowY","msg","justifyContent","color","wordWrap","ref","onSubmit","marginTop","gap","type","value","onChange","target","placeholder","flex","border","cursor","_c","$RefreshReg$"],"sources":["D:/SCALER/second_year/Project/skillsync/frontend/src/pages/Messages.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { db, auth } from \"../firebase\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  query,\r\n  orderBy,\r\n  onSnapshot,\r\n  serverTimestamp,\r\n} from \"firebase/firestore\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nexport default function Messages({ chatId, currentUser, recipient }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // 🧠 Fetch messages in real time\r\n  useEffect(() => {\r\n    if (!chatId) return;\r\n\r\n    const messagesRef = collection(db, \"chats\", chatId, \"messages\");\r\n    const q = query(messagesRef, orderBy(\"createdAt\", \"asc\"));\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      const msgs = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n      setMessages(msgs);\r\n\r\n      // Trigger notification for new incoming message\r\n      const lastMsg = msgs[msgs.length - 1];\r\n      if (lastMsg && lastMsg.senderId !== currentUser.uid) {\r\n        toast(`💬 New message from ${recipient?.name || \"a user\"}`, {\r\n          icon: \"🔔\",\r\n          duration: 4000,\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [chatId, currentUser.uid, recipient?.name]);\r\n\r\n  // 🪄 Auto scroll to bottom on new message\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  // ✉️ Send message\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n\r\n    try {\r\n      const msgData = {\r\n        text: newMessage,\r\n        senderId: currentUser.uid,\r\n        senderName: currentUser.displayName,\r\n        createdAt: serverTimestamp(),\r\n      };\r\n\r\n      await addDoc(collection(db, \"chats\", chatId, \"messages\"), msgData);\r\n      setNewMessage(\"\");\r\n\r\n      toast(\"📤 Message sent!\", {\r\n        icon: \"✅\",\r\n        duration: 2000,\r\n      });\r\n    } catch (err) {\r\n      console.error(\"Failed to send message:\", err);\r\n      toast.error(\"Failed to send message. Try again.\");\r\n    }\r\n  };\r\n\r\n  // ⚡ Show notification when chat is opened\r\n  useEffect(() => {\r\n    if (recipient?.name)\r\n      toast(`💬 Chat opened with ${recipient.name}`, {\r\n        icon: \"📨\",\r\n        duration: 2000,\r\n      });\r\n  }, [recipient?.name]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        maxWidth: \"600px\",\r\n        margin: \"0 auto\",\r\n        padding: \"20px\",\r\n        borderRadius: \"10px\",\r\n        background: \"#f5f7fa\",\r\n        boxShadow: \"0 2px 12px rgba(0,0,0,0.1)\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"80vh\",\r\n      }}\r\n    >\r\n      <h2 style={{ textAlign: \"center\", marginBottom: \"10px\" }}>\r\n        Chat with {recipient?.name || \"User\"}\r\n      </h2>\r\n\r\n      {/* Messages Display */}\r\n      <div\r\n        style={{\r\n          flexGrow: 1,\r\n          overflowY: \"auto\",\r\n          padding: \"10px\",\r\n          borderRadius: \"8px\",\r\n          background: \"#fff\",\r\n        }}\r\n      >\r\n        {messages.map((msg) => (\r\n          <div\r\n            key={msg.id}\r\n            style={{\r\n              marginBottom: \"10px\",\r\n              display: \"flex\",\r\n              justifyContent:\r\n                msg.senderId === currentUser.uid ? \"flex-end\" : \"flex-start\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                background:\r\n                  msg.senderId === currentUser.uid ? \"#4CAF50\" : \"#e0e0e0\",\r\n                color: msg.senderId === currentUser.uid ? \"#fff\" : \"#000\",\r\n                padding: \"10px 14px\",\r\n                borderRadius: \"15px\",\r\n                maxWidth: \"70%\",\r\n                wordWrap: \"break-word\",\r\n              }}\r\n            >\r\n              <span>{msg.text}</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {/* Message Input */}\r\n      <form\r\n        onSubmit={sendMessage}\r\n        style={{\r\n          display: \"flex\",\r\n          marginTop: \"10px\",\r\n          gap: \"10px\",\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n          style={{\r\n            flex: 1,\r\n            padding: \"10px\",\r\n            borderRadius: \"8px\",\r\n            border: \"1px solid #ccc\",\r\n          }}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          style={{\r\n            padding: \"10px 16px\",\r\n            border: \"none\",\r\n            borderRadius: \"8px\",\r\n            background: \"#4CAF50\",\r\n            color: \"#fff\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}