{"ast":null,"code":"var _jsxFileName = \"D:\\\\SCALER\\\\second_year\\\\Project\\\\skillsync\\\\frontend\\\\src\\\\pages\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { db } from \"../firebase\";\nimport { collection, query, where, getDocs, updateDoc, doc, orderBy, addDoc, onSnapshot, serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Messages() {\n  _s();\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [allUsers, setAllUsers] = useState([]);\n  const [requests, setRequests] = useState([]);\n  const [acceptedUsers, setAcceptedUsers] = useState([]); // [{id, name}]\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // Fetch all users\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const snapshot = await getDocs(collection(db, \"users\"));\n      const users = snapshot.docs.map(doc => doc.data());\n      setAllUsers(users);\n    };\n    fetchUsers();\n  }, []);\n\n  // Fetch incoming requests\n  useEffect(() => {\n    if (!allUsers.length) return;\n    const q = query(collection(db, \"requests\"), where(\"toId\", \"==\", user.googleId));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const reqs = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setRequests(reqs.filter(r => r.status === \"pending\"));\n    });\n    return () => unsubscribe();\n  }, [allUsers]);\n\n  // Fetch accepted users\n  useEffect(() => {\n    if (!allUsers.length) return;\n    const q = query(collection(db, \"requests\"), where(\"status\", \"==\", \"accepted\"));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      let accepted = snapshot.docs.map(doc => doc.data()).filter(r => r.fromId === user.googleId || r.toId === user.googleId).map(r => {\n        const otherId = r.fromId === user.googleId ? r.toId : r.fromId;\n        const otherUser = allUsers.find(u => u.googleId === otherId);\n        return otherUser ? {\n          id: otherId,\n          name: otherUser.name\n        } : null;\n      }).filter(Boolean);\n\n      // Remove duplicates\n      const unique = Array.from(new Map(accepted.map(u => [u.id, u])).values());\n      setAcceptedUsers(unique);\n    });\n    return () => unsubscribe();\n  }, [allUsers]);\n\n  // Fetch messages for selected user\n  useEffect(() => {\n    if (!selectedUser) return;\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\n    const q = query(collection(db, \"messages\"), where(\"chatId\", \"==\", chatId), orderBy(\"timestamp\"));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const msgs = snapshot.docs.map(doc => doc.data());\n      setMessages(msgs);\n    });\n    return () => unsubscribe();\n  }, [selectedUser]);\n  const acceptRequest = async req => {\n    const requestRef = doc(db, \"requests\", req.id);\n    await updateDoc(requestRef, {\n      status: \"accepted\"\n    });\n  };\n  const rejectRequest = async req => {\n    const requestRef = doc(db, \"requests\", req.id);\n    await updateDoc(requestRef, {\n      status: \"rejected\"\n    });\n  };\n  const sendMessage = async () => {\n    if (!newMessage.trim() || !selectedUser) return;\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\n    await addDoc(collection(db, \"messages\"), {\n      chatId,\n      fromId: user.googleId,\n      toId: selectedUser.id,\n      message: newMessage,\n      timestamp: serverTimestamp()\n    });\n    setNewMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Messages & Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Incoming Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), requests.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }, this), requests.map(req => {\n      const fromUser = allUsers.find(u => u.googleId === req.fromId);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ddd\",\n          padding: \"10px\",\n          margin: \"10px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Request from: \", (fromUser === null || fromUser === void 0 ? void 0 : fromUser.name) || req.fromId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptRequest(req),\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => rejectRequest(req),\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, req.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), acceptedUsers.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No chats yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"10px\",\n        marginBottom: \"20px\",\n        flexWrap: \"wrap\"\n      },\n      children: acceptedUsers.map(u => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedUser(u),\n        style: {\n          padding: \"6px 12px\",\n          borderRadius: \"6px\"\n        },\n        children: u.name\n      }, u.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Chat with \", selectedUser.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ddd\",\n          padding: \"10px\",\n          height: \"300px\",\n          overflowY: \"scroll\",\n          marginBottom: \"10px\"\n        },\n        children: messages.map((msg, idx) => {\n          const senderName = msg.fromId === user.googleId ? \"You\" : selectedUser.name;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: msg.fromId === user.googleId ? \"right\" : \"left\",\n              margin: \"5px 0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: \"inline-block\",\n                padding: \"6px 10px\",\n                borderRadius: \"12px\",\n                background: msg.fromId === user.googleId ? \"#4CAF50\" : \"#ddd\",\n                color: msg.fromId === user.googleId ? \"#fff\" : \"#000\"\n              },\n              children: [senderName, \": \", msg.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        style: {\n          padding: \"8px\",\n          width: \"80%\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          padding: \"8px\"\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(Messages, \"QkJmnSOWegLWRhiZarFM110hTQc=\");\n_c = Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","query","where","getDocs","updateDoc","doc","orderBy","addDoc","onSnapshot","serverTimestamp","jsxDEV","_jsxDEV","Messages","_s","user","JSON","parse","localStorage","getItem","allUsers","setAllUsers","requests","setRequests","acceptedUsers","setAcceptedUsers","selectedUser","setSelectedUser","messages","setMessages","newMessage","setNewMessage","fetchUsers","snapshot","users","docs","map","data","length","q","googleId","unsubscribe","reqs","id","filter","r","status","accepted","fromId","toId","otherId","otherUser","find","u","name","Boolean","unique","Array","from","Map","values","chatId","sort","join","msgs","acceptRequest","req","requestRef","rejectRequest","sendMessage","trim","message","timestamp","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","fromUser","border","margin","onClick","display","gap","marginBottom","flexWrap","borderRadius","height","overflowY","msg","idx","senderName","textAlign","background","color","type","value","onChange","e","target","placeholder","width","marginRight","_c","$RefreshReg$"],"sources":["D:/SCALER/second_year/Project/skillsync/frontend/src/pages/Messages.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  updateDoc,\r\n  doc,\r\n  orderBy,\r\n  addDoc,\r\n  onSnapshot,\r\n  serverTimestamp\r\n} from \"firebase/firestore\";\r\n\r\nexport default function Messages() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [requests, setRequests] = useState([]);\r\n  const [acceptedUsers, setAcceptedUsers] = useState([]); // [{id, name}]\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  // Fetch all users\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const snapshot = await getDocs(collection(db, \"users\"));\r\n      const users = snapshot.docs.map(doc => doc.data());\r\n      setAllUsers(users);\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Fetch incoming requests\r\n  useEffect(() => {\r\n    if (!allUsers.length) return;\r\n    const q = query(collection(db, \"requests\"), where(\"toId\", \"==\", user.googleId));\r\n    const unsubscribe = onSnapshot(q, snapshot => {\r\n      const reqs = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setRequests(reqs.filter(r => r.status === \"pending\"));\r\n    });\r\n    return () => unsubscribe();\r\n  }, [allUsers]);\r\n\r\n  // Fetch accepted users\r\n  useEffect(() => {\r\n    if (!allUsers.length) return;\r\n    const q = query(collection(db, \"requests\"), where(\"status\", \"==\", \"accepted\"));\r\n    const unsubscribe = onSnapshot(q, snapshot => {\r\n      let accepted = snapshot.docs\r\n        .map(doc => doc.data())\r\n        .filter(r => r.fromId === user.googleId || r.toId === user.googleId)\r\n        .map(r => {\r\n          const otherId = r.fromId === user.googleId ? r.toId : r.fromId;\r\n          const otherUser = allUsers.find(u => u.googleId === otherId);\r\n          return otherUser ? { id: otherId, name: otherUser.name } : null;\r\n        })\r\n        .filter(Boolean);\r\n\r\n      // Remove duplicates\r\n      const unique = Array.from(new Map(accepted.map(u => [u.id, u])).values());\r\n      setAcceptedUsers(unique);\r\n    });\r\n    return () => unsubscribe();\r\n  }, [allUsers]);\r\n\r\n  // Fetch messages for selected user\r\n  useEffect(() => {\r\n    if (!selectedUser) return;\r\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\r\n    const q = query(collection(db, \"messages\"), where(\"chatId\", \"==\", chatId), orderBy(\"timestamp\"));\r\n    const unsubscribe = onSnapshot(q, snapshot => {\r\n      const msgs = snapshot.docs.map(doc => doc.data());\r\n      setMessages(msgs);\r\n    });\r\n    return () => unsubscribe();\r\n  }, [selectedUser]);\r\n\r\n  const acceptRequest = async (req) => {\r\n    const requestRef = doc(db, \"requests\", req.id);\r\n    await updateDoc(requestRef, { status: \"accepted\" });\r\n  };\r\n\r\n  const rejectRequest = async (req) => {\r\n    const requestRef = doc(db, \"requests\", req.id);\r\n    await updateDoc(requestRef, { status: \"rejected\" });\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!newMessage.trim() || !selectedUser) return;\r\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\r\n    await addDoc(collection(db, \"messages\"), {\r\n      chatId,\r\n      fromId: user.googleId,\r\n      toId: selectedUser.id,\r\n      message: newMessage,\r\n      timestamp: serverTimestamp(),\r\n    });\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1>Messages & Requests</h1>\r\n\r\n      {/* Incoming Requests */}\r\n      <h2>Incoming Requests</h2>\r\n      {requests.length === 0 && <p>No requests</p>}\r\n      {requests.map(req => {\r\n        const fromUser = allUsers.find(u => u.googleId === req.fromId);\r\n        return (\r\n          <div key={req.id} style={{ border: \"1px solid #ddd\", padding: \"10px\", margin: \"10px 0\" }}>\r\n            <p>Request from: {fromUser?.name || req.fromId}</p>\r\n            <button onClick={() => acceptRequest(req)}>Accept</button>\r\n            <button onClick={() => rejectRequest(req)}>Reject</button>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {/* Chat List */}\r\n      <h2>Chats</h2>\r\n      {acceptedUsers.length === 0 && <p>No chats yet</p>}\r\n      <div style={{ display: \"flex\", gap: \"10px\", marginBottom: \"20px\", flexWrap: \"wrap\" }}>\r\n        {acceptedUsers.map(u => (\r\n          <button\r\n            key={u.id}\r\n            onClick={() => setSelectedUser(u)}\r\n            style={{ padding: \"6px 12px\", borderRadius: \"6px\" }}\r\n          >\r\n            {u.name}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat Window */}\r\n      {selectedUser && (\r\n        <div>\r\n          <h3>Chat with {selectedUser.name}</h3>\r\n          <div\r\n            style={{\r\n              border: \"1px solid #ddd\",\r\n              padding: \"10px\",\r\n              height: \"300px\",\r\n              overflowY: \"scroll\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            {messages.map((msg, idx) => {\r\n              const senderName = msg.fromId === user.googleId ? \"You\" : selectedUser.name;\r\n              return (\r\n                <div\r\n                  key={idx}\r\n                  style={{\r\n                    textAlign: msg.fromId === user.googleId ? \"right\" : \"left\",\r\n                    margin: \"5px 0\",\r\n                  }}\r\n                >\r\n                  <span\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      padding: \"6px 10px\",\r\n                      borderRadius: \"12px\",\r\n                      background: msg.fromId === user.googleId ? \"#4CAF50\" : \"#ddd\",\r\n                      color: msg.fromId === user.googleId ? \"#fff\" : \"#000\",\r\n                    }}\r\n                  >\r\n                    {senderName}: {msg.message}\r\n                  </span>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            value={newMessage}\r\n            onChange={e => setNewMessage(e.target.value)}\r\n            placeholder=\"Type a message...\"\r\n            style={{ padding: \"8px\", width: \"80%\", marginRight: \"10px\" }}\r\n          />\r\n          <button onClick={sendMessage} style={{ padding: \"8px\" }}>\r\n            Send\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}