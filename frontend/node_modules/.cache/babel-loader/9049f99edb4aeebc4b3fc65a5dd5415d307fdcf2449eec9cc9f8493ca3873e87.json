{"ast":null,"code":"var _jsxFileName = \"D:\\\\SCALER\\\\second_year\\\\Project\\\\skillsync\\\\frontend\\\\src\\\\pages\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { db } from \"../firebase\";\nimport { collection, query, where, getDocs, updateDoc, doc, orderBy, addDoc, onSnapshot, serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Messages() {\n  _s();\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [allUsers, setAllUsers] = useState([]);\n  const [requests, setRequests] = useState([]);\n  const [acceptedUsers, setAcceptedUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messagesEndRef = useRef(null);\n\n  // Fetch all users for name mapping\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const snapshot = await getDocs(collection(db, \"users\"));\n      const users = snapshot.docs.map(doc => doc.data());\n      setAllUsers(users);\n    };\n    fetchUsers();\n  }, []);\n\n  // Fetch incoming requests\n  useEffect(() => {\n    if (!allUsers.length) return;\n    const q = query(collection(db, \"requests\"), where(\"toId\", \"==\", user.googleId));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const reqs = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setRequests(reqs.filter(r => r.status === \"pending\"));\n    });\n    return () => unsubscribe();\n  }, [allUsers]);\n\n  // Fetch accepted users (deduplicated)\n  useEffect(() => {\n    if (!allUsers.length) return;\n    const q = query(collection(db, \"requests\"), where(\"status\", \"==\", \"accepted\"));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      let accepted = snapshot.docs.map(doc => doc.data()).filter(r => r.fromId === user.googleId || r.toId === user.googleId).map(r => {\n        const otherId = r.fromId === user.googleId ? r.toId : r.fromId;\n        const otherUser = allUsers.find(u => u.googleId === otherId);\n        return otherUser ? {\n          id: otherId,\n          name: otherUser.name\n        } : null;\n      }).filter(Boolean);\n\n      // Deduplicate by id\n      const unique = Array.from(new Map(accepted.map(u => [u.id, u])).values());\n      setAcceptedUsers(unique);\n    });\n    return () => unsubscribe();\n  }, [allUsers]);\n\n  // Fetch messages for selected user\n  useEffect(() => {\n    if (!selectedUser || !allUsers.length) return;\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\n    const q = query(collection(db, \"messages\"), where(\"chatId\", \"==\", chatId), orderBy(\"timestamp\", \"asc\"));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const msgs = snapshot.docs.map(doc => doc.data());\n      setMessages(msgs);\n    });\n    return () => unsubscribe();\n  }, [selectedUser, allUsers]);\n\n  // Scroll to bottom on new message\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const acceptRequest = async req => {\n    const requestRef = doc(db, \"requests\", req.id);\n    await updateDoc(requestRef, {\n      status: \"accepted\"\n    });\n  };\n  const rejectRequest = async req => {\n    const requestRef = doc(db, \"requests\", req.id);\n    await updateDoc(requestRef, {\n      status: \"rejected\"\n    });\n  };\n  const sendMessage = async () => {\n    if (!newMessage.trim() || !selectedUser) return;\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\n    await addDoc(collection(db, \"messages\"), {\n      chatId,\n      fromId: user.googleId,\n      toId: selectedUser.id,\n      message: newMessage,\n      timestamp: serverTimestamp()\n    });\n    setNewMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Messages & Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Incoming Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), requests.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }, this), requests.map(req => {\n      const fromUser = allUsers.find(u => u.googleId === req.fromId);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ddd\",\n          padding: \"10px\",\n          margin: \"10px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Request from: \", (fromUser === null || fromUser === void 0 ? void 0 : fromUser.name) || req.fromId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptRequest(req),\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => rejectRequest(req),\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, req.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), acceptedUsers.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No chats yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"10px\",\n        marginBottom: \"20px\",\n        flexWrap: \"wrap\"\n      },\n      children: acceptedUsers.map(u => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedUser(u),\n        style: {\n          padding: \"6px 12px\",\n          borderRadius: \"6px\"\n        },\n        children: u.name\n      }, u.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Chat with \", selectedUser.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ddd\",\n          padding: \"10px\",\n          height: \"300px\",\n          overflowY: \"scroll\",\n          marginBottom: \"10px\"\n        },\n        children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 39\n        }, this), messages.map((msg, idx) => {\n          const senderName = msg.fromId === user.googleId ? \"You\" : selectedUser.name;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: msg.fromId === user.googleId ? \"right\" : \"left\",\n              margin: \"5px 0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: \"inline-block\",\n                padding: \"6px 10px\",\n                borderRadius: \"12px\",\n                background: msg.fromId === user.googleId ? \"#4CAF50\" : \"#ddd\",\n                color: msg.fromId === user.googleId ? \"#fff\" : \"#000\"\n              },\n              children: [senderName, \": \", msg.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        style: {\n          padding: \"8px\",\n          width: \"80%\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          padding: \"8px\"\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(Messages, \"pnq+aUaqpK6CfrmkJRl/pnXBHsI=\");\n_c = Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","useRef","db","collection","query","where","getDocs","updateDoc","doc","orderBy","addDoc","onSnapshot","serverTimestamp","jsxDEV","_jsxDEV","Messages","_s","user","JSON","parse","localStorage","getItem","allUsers","setAllUsers","requests","setRequests","acceptedUsers","setAcceptedUsers","selectedUser","setSelectedUser","messages","setMessages","newMessage","setNewMessage","messagesEndRef","fetchUsers","snapshot","users","docs","map","data","length","q","googleId","unsubscribe","reqs","id","filter","r","status","accepted","fromId","toId","otherId","otherUser","find","u","name","Boolean","unique","Array","from","Map","values","chatId","sort","join","msgs","_messagesEndRef$curre","current","scrollIntoView","behavior","acceptRequest","req","requestRef","rejectRequest","sendMessage","trim","message","timestamp","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","fromUser","border","margin","onClick","display","gap","marginBottom","flexWrap","borderRadius","height","overflowY","msg","idx","senderName","textAlign","background","color","ref","type","value","onChange","e","target","placeholder","width","marginRight","_c","$RefreshReg$"],"sources":["D:/SCALER/second_year/Project/skillsync/frontend/src/pages/Messages.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  updateDoc,\r\n  doc,\r\n  orderBy,\r\n  addDoc,\r\n  onSnapshot,\r\n  serverTimestamp\r\n} from \"firebase/firestore\";\r\n\r\nexport default function Messages() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [requests, setRequests] = useState([]);\r\n  const [acceptedUsers, setAcceptedUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Fetch all users for name mapping\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const snapshot = await getDocs(collection(db, \"users\"));\r\n      const users = snapshot.docs.map(doc => doc.data());\r\n      setAllUsers(users);\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Fetch incoming requests\r\n  useEffect(() => {\r\n    if (!allUsers.length) return;\r\n    const q = query(collection(db, \"requests\"), where(\"toId\", \"==\", user.googleId));\r\n    const unsubscribe = onSnapshot(q, snapshot => {\r\n      const reqs = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setRequests(reqs.filter(r => r.status === \"pending\"));\r\n    });\r\n    return () => unsubscribe();\r\n  }, [allUsers]);\r\n\r\n  // Fetch accepted users (deduplicated)\r\n  useEffect(() => {\r\n    if (!allUsers.length) return;\r\n    const q = query(collection(db, \"requests\"), where(\"status\", \"==\", \"accepted\"));\r\n    const unsubscribe = onSnapshot(q, snapshot => {\r\n      let accepted = snapshot.docs\r\n        .map(doc => doc.data())\r\n        .filter(r => r.fromId === user.googleId || r.toId === user.googleId)\r\n        .map(r => {\r\n          const otherId = r.fromId === user.googleId ? r.toId : r.fromId;\r\n          const otherUser = allUsers.find(u => u.googleId === otherId);\r\n          return otherUser ? { id: otherId, name: otherUser.name } : null;\r\n        })\r\n        .filter(Boolean);\r\n\r\n      // Deduplicate by id\r\n      const unique = Array.from(new Map(accepted.map(u => [u.id, u])).values());\r\n      setAcceptedUsers(unique);\r\n    });\r\n    return () => unsubscribe();\r\n  }, [allUsers]);\r\n\r\n  // Fetch messages for selected user\r\n  useEffect(() => {\r\n    if (!selectedUser || !allUsers.length) return;\r\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\r\n    const q = query(\r\n      collection(db, \"messages\"),\r\n      where(\"chatId\", \"==\", chatId),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n    const unsubscribe = onSnapshot(q, snapshot => {\r\n      const msgs = snapshot.docs.map(doc => doc.data());\r\n      setMessages(msgs);\r\n    });\r\n    return () => unsubscribe();\r\n  }, [selectedUser, allUsers]);\r\n\r\n  // Scroll to bottom on new message\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const acceptRequest = async (req) => {\r\n    const requestRef = doc(db, \"requests\", req.id);\r\n    await updateDoc(requestRef, { status: \"accepted\" });\r\n  };\r\n\r\n  const rejectRequest = async (req) => {\r\n    const requestRef = doc(db, \"requests\", req.id);\r\n    await updateDoc(requestRef, { status: \"rejected\" });\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!newMessage.trim() || !selectedUser) return;\r\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\r\n    await addDoc(collection(db, \"messages\"), {\r\n      chatId,\r\n      fromId: user.googleId,\r\n      toId: selectedUser.id,\r\n      message: newMessage,\r\n      timestamp: serverTimestamp(),\r\n    });\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1>Messages & Requests</h1>\r\n\r\n      {/* Incoming Requests */}\r\n      <h2>Incoming Requests</h2>\r\n      {requests.length === 0 && <p>No requests</p>}\r\n      {requests.map(req => {\r\n        const fromUser = allUsers.find(u => u.googleId === req.fromId);\r\n        return (\r\n          <div key={req.id} style={{ border: \"1px solid #ddd\", padding: \"10px\", margin: \"10px 0\" }}>\r\n            <p>Request from: {fromUser?.name || req.fromId}</p>\r\n            <button onClick={() => acceptRequest(req)}>Accept</button>\r\n            <button onClick={() => rejectRequest(req)}>Reject</button>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {/* Chat List */}\r\n      <h2>Chats</h2>\r\n      {acceptedUsers.length === 0 && <p>No chats yet</p>}\r\n      <div style={{ display: \"flex\", gap: \"10px\", marginBottom: \"20px\", flexWrap: \"wrap\" }}>\r\n        {acceptedUsers.map(u => (\r\n          <button\r\n            key={u.id}\r\n            onClick={() => setSelectedUser(u)}\r\n            style={{ padding: \"6px 12px\", borderRadius: \"6px\" }}\r\n          >\r\n            {u.name}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat Window */}\r\n      {selectedUser && (\r\n        <div>\r\n          <h3>Chat with {selectedUser.name}</h3>\r\n          <div\r\n            style={{\r\n              border: \"1px solid #ddd\",\r\n              padding: \"10px\",\r\n              height: \"300px\",\r\n              overflowY: \"scroll\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            {messages.length === 0 && <p>No messages yet.</p>}\r\n            {messages.map((msg, idx) => {\r\n              const senderName = msg.fromId === user.googleId ? \"You\" : selectedUser.name;\r\n              return (\r\n                <div\r\n                  key={idx}\r\n                  style={{\r\n                    textAlign: msg.fromId === user.googleId ? \"right\" : \"left\",\r\n                    margin: \"5px 0\",\r\n                  }}\r\n                >\r\n                  <span\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      padding: \"6px 10px\",\r\n                      borderRadius: \"12px\",\r\n                      background: msg.fromId === user.googleId ? \"#4CAF50\" : \"#ddd\",\r\n                      color: msg.fromId === user.googleId ? \"#fff\" : \"#000\",\r\n                    }}\r\n                  >\r\n                    {senderName}: {msg.message}\r\n                  </span>\r\n                </div>\r\n              );\r\n            })}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            value={newMessage}\r\n            onChange={e => setNewMessage(e.target.value)}\r\n            placeholder=\"Type a message...\"\r\n            style={{ padding: \"8px\", width: \"80%\", marginRight: \"10px\" }}\r\n          />\r\n          <button onClick={sendMessage} style={{ padding: \"8px\" }}>\r\n            Send\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,EAAE,QAAQ,aAAa;AAChC,SACEC,UAAU,EACVC,KAAK,EACLC,KAAK,EACLC,OAAO,EACPC,SAAS,EACTC,GAAG,EACHC,OAAO,EACPC,MAAM,EACNC,UAAU,EACVC,eAAe,QACV,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC+B,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiC,UAAU,EAAEC,aAAa,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMmC,cAAc,GAAGjC,MAAM,CAAC,IAAI,CAAC;;EAEnC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMmC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAM9B,OAAO,CAACH,UAAU,CAACD,EAAE,EAAE,OAAO,CAAC,CAAC;MACvD,MAAMmC,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAC/B,GAAG,IAAIA,GAAG,CAACgC,IAAI,CAAC,CAAC,CAAC;MAClDjB,WAAW,CAACc,KAAK,CAAC;IACpB,CAAC;IACDF,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAnC,SAAS,CAAC,MAAM;IACd,IAAI,CAACsB,QAAQ,CAACmB,MAAM,EAAE;IACtB,MAAMC,CAAC,GAAGtC,KAAK,CAACD,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,EAAEG,KAAK,CAAC,MAAM,EAAE,IAAI,EAAEY,IAAI,CAAC0B,QAAQ,CAAC,CAAC;IAC/E,MAAMC,WAAW,GAAGjC,UAAU,CAAC+B,CAAC,EAAEN,QAAQ,IAAI;MAC5C,MAAMS,IAAI,GAAGT,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAC/B,GAAG,KAAK;QAAEsC,EAAE,EAAEtC,GAAG,CAACsC,EAAE;QAAE,GAAGtC,GAAG,CAACgC,IAAI,CAAC;MAAE,CAAC,CAAC,CAAC;MACtEf,WAAW,CAACoB,IAAI,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAK,SAAS,CAAC,CAAC;IACvD,CAAC,CAAC;IACF,OAAO,MAAML,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACtB,QAAQ,CAAC,CAAC;;EAEd;EACAtB,SAAS,CAAC,MAAM;IACd,IAAI,CAACsB,QAAQ,CAACmB,MAAM,EAAE;IACtB,MAAMC,CAAC,GAAGtC,KAAK,CAACD,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,EAAEG,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;IAC9E,MAAMuC,WAAW,GAAGjC,UAAU,CAAC+B,CAAC,EAAEN,QAAQ,IAAI;MAC5C,IAAIc,QAAQ,GAAGd,QAAQ,CAACE,IAAI,CACzBC,GAAG,CAAC/B,GAAG,IAAIA,GAAG,CAACgC,IAAI,CAAC,CAAC,CAAC,CACtBO,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACG,MAAM,KAAKlC,IAAI,CAAC0B,QAAQ,IAAIK,CAAC,CAACI,IAAI,KAAKnC,IAAI,CAAC0B,QAAQ,CAAC,CACnEJ,GAAG,CAACS,CAAC,IAAI;QACR,MAAMK,OAAO,GAAGL,CAAC,CAACG,MAAM,KAAKlC,IAAI,CAAC0B,QAAQ,GAAGK,CAAC,CAACI,IAAI,GAAGJ,CAAC,CAACG,MAAM;QAC9D,MAAMG,SAAS,GAAGhC,QAAQ,CAACiC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACb,QAAQ,KAAKU,OAAO,CAAC;QAC5D,OAAOC,SAAS,GAAG;UAAER,EAAE,EAAEO,OAAO;UAAEI,IAAI,EAAEH,SAAS,CAACG;QAAK,CAAC,GAAG,IAAI;MACjE,CAAC,CAAC,CACDV,MAAM,CAACW,OAAO,CAAC;;MAElB;MACA,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACZ,QAAQ,CAACX,GAAG,CAACiB,CAAC,IAAI,CAACA,CAAC,CAACV,EAAE,EAAEU,CAAC,CAAC,CAAC,CAAC,CAACO,MAAM,CAAC,CAAC,CAAC;MACzEpC,gBAAgB,CAACgC,MAAM,CAAC;IAC1B,CAAC,CAAC;IACF,OAAO,MAAMf,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACtB,QAAQ,CAAC,CAAC;;EAEd;EACAtB,SAAS,CAAC,MAAM;IACd,IAAI,CAAC4B,YAAY,IAAI,CAACN,QAAQ,CAACmB,MAAM,EAAE;IACvC,MAAMuB,MAAM,GAAG,CAAC/C,IAAI,CAAC0B,QAAQ,EAAEf,YAAY,CAACkB,EAAE,CAAC,CAACmB,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IAChE,MAAMxB,CAAC,GAAGtC,KAAK,CACbD,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,EAC1BG,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE2D,MAAM,CAAC,EAC7BvD,OAAO,CAAC,WAAW,EAAE,KAAK,CAC5B,CAAC;IACD,MAAMmC,WAAW,GAAGjC,UAAU,CAAC+B,CAAC,EAAEN,QAAQ,IAAI;MAC5C,MAAM+B,IAAI,GAAG/B,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAC/B,GAAG,IAAIA,GAAG,CAACgC,IAAI,CAAC,CAAC,CAAC;MACjDT,WAAW,CAACoC,IAAI,CAAC;IACnB,CAAC,CAAC;IACF,OAAO,MAAMvB,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,CAAChB,YAAY,EAAEN,QAAQ,CAAC,CAAC;;EAE5B;EACAtB,SAAS,CAAC,MAAM;IAAA,IAAAoE,qBAAA;IACd,CAAAA,qBAAA,GAAAlC,cAAc,CAACmC,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAACzC,QAAQ,CAAC,CAAC;EAEd,MAAM0C,aAAa,GAAG,MAAOC,GAAG,IAAK;IACnC,MAAMC,UAAU,GAAGlE,GAAG,CAACN,EAAE,EAAE,UAAU,EAAEuE,GAAG,CAAC3B,EAAE,CAAC;IAC9C,MAAMvC,SAAS,CAACmE,UAAU,EAAE;MAAEzB,MAAM,EAAE;IAAW,CAAC,CAAC;EACrD,CAAC;EAED,MAAM0B,aAAa,GAAG,MAAOF,GAAG,IAAK;IACnC,MAAMC,UAAU,GAAGlE,GAAG,CAACN,EAAE,EAAE,UAAU,EAAEuE,GAAG,CAAC3B,EAAE,CAAC;IAC9C,MAAMvC,SAAS,CAACmE,UAAU,EAAE;MAAEzB,MAAM,EAAE;IAAW,CAAC,CAAC;EACrD,CAAC;EAED,MAAM2B,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAAC5C,UAAU,CAAC6C,IAAI,CAAC,CAAC,IAAI,CAACjD,YAAY,EAAE;IACzC,MAAMoC,MAAM,GAAG,CAAC/C,IAAI,CAAC0B,QAAQ,EAAEf,YAAY,CAACkB,EAAE,CAAC,CAACmB,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IAChE,MAAMxD,MAAM,CAACP,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,EAAE;MACvC8D,MAAM;MACNb,MAAM,EAAElC,IAAI,CAAC0B,QAAQ;MACrBS,IAAI,EAAExB,YAAY,CAACkB,EAAE;MACrBgC,OAAO,EAAE9C,UAAU;MACnB+C,SAAS,EAAEnE,eAAe,CAAC;IAC7B,CAAC,CAAC;IACFqB,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,oBACEnB,OAAA;IAAKkE,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BpE,OAAA;MAAAoE,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG5BxE,OAAA;MAAAoE,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzB9D,QAAQ,CAACiB,MAAM,KAAK,CAAC,iBAAI3B,OAAA;MAAAoE,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC3C9D,QAAQ,CAACe,GAAG,CAACkC,GAAG,IAAI;MACnB,MAAMc,QAAQ,GAAGjE,QAAQ,CAACiC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACb,QAAQ,KAAK8B,GAAG,CAACtB,MAAM,CAAC;MAC9D,oBACErC,OAAA;QAAkBkE,KAAK,EAAE;UAAEQ,MAAM,EAAE,gBAAgB;UAAEP,OAAO,EAAE,MAAM;UAAEQ,MAAM,EAAE;QAAS,CAAE;QAAAP,QAAA,gBACvFpE,OAAA;UAAAoE,QAAA,GAAG,gBAAc,EAAC,CAAAK,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE9B,IAAI,KAAIgB,GAAG,CAACtB,MAAM;QAAA;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnDxE,OAAA;UAAQ4E,OAAO,EAAEA,CAAA,KAAMlB,aAAa,CAACC,GAAG,CAAE;UAAAS,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1DxE,OAAA;UAAQ4E,OAAO,EAAEA,CAAA,KAAMf,aAAa,CAACF,GAAG,CAAE;UAAAS,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAHlDb,GAAG,CAAC3B,EAAE;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CAAC;IAEV,CAAC,CAAC,eAGFxE,OAAA;MAAAoE,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACb5D,aAAa,CAACe,MAAM,KAAK,CAAC,iBAAI3B,OAAA;MAAAoE,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClDxE,OAAA;MAAKkE,KAAK,EAAE;QAAEW,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE,MAAM;QAAEC,YAAY,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAZ,QAAA,EAClFxD,aAAa,CAACa,GAAG,CAACiB,CAAC,iBAClB1C,OAAA;QAEE4E,OAAO,EAAEA,CAAA,KAAM7D,eAAe,CAAC2B,CAAC,CAAE;QAClCwB,KAAK,EAAE;UAAEC,OAAO,EAAE,UAAU;UAAEc,YAAY,EAAE;QAAM,CAAE;QAAAb,QAAA,EAEnD1B,CAAC,CAACC;MAAI,GAJFD,CAAC,CAACV,EAAE;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKH,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAGL1D,YAAY,iBACXd,OAAA;MAAAoE,QAAA,gBACEpE,OAAA;QAAAoE,QAAA,GAAI,YAAU,EAACtD,YAAY,CAAC6B,IAAI;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtCxE,OAAA;QACEkE,KAAK,EAAE;UACLQ,MAAM,EAAE,gBAAgB;UACxBP,OAAO,EAAE,MAAM;UACfe,MAAM,EAAE,OAAO;UACfC,SAAS,EAAE,QAAQ;UACnBJ,YAAY,EAAE;QAChB,CAAE;QAAAX,QAAA,GAEDpD,QAAQ,CAACW,MAAM,KAAK,CAAC,iBAAI3B,OAAA;UAAAoE,QAAA,EAAG;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EAChDxD,QAAQ,CAACS,GAAG,CAAC,CAAC2D,GAAG,EAAEC,GAAG,KAAK;UAC1B,MAAMC,UAAU,GAAGF,GAAG,CAAC/C,MAAM,KAAKlC,IAAI,CAAC0B,QAAQ,GAAG,KAAK,GAAGf,YAAY,CAAC6B,IAAI;UAC3E,oBACE3C,OAAA;YAEEkE,KAAK,EAAE;cACLqB,SAAS,EAAEH,GAAG,CAAC/C,MAAM,KAAKlC,IAAI,CAAC0B,QAAQ,GAAG,OAAO,GAAG,MAAM;cAC1D8C,MAAM,EAAE;YACV,CAAE;YAAAP,QAAA,eAEFpE,OAAA;cACEkE,KAAK,EAAE;gBACLW,OAAO,EAAE,cAAc;gBACvBV,OAAO,EAAE,UAAU;gBACnBc,YAAY,EAAE,MAAM;gBACpBO,UAAU,EAAEJ,GAAG,CAAC/C,MAAM,KAAKlC,IAAI,CAAC0B,QAAQ,GAAG,SAAS,GAAG,MAAM;gBAC7D4D,KAAK,EAAEL,GAAG,CAAC/C,MAAM,KAAKlC,IAAI,CAAC0B,QAAQ,GAAG,MAAM,GAAG;cACjD,CAAE;cAAAuC,QAAA,GAEDkB,UAAU,EAAC,IAAE,EAACF,GAAG,CAACpB,OAAO;YAAA;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB;UAAC,GAhBFa,GAAG;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiBL,CAAC;QAEV,CAAC,CAAC,eACFxE,OAAA;UAAK0F,GAAG,EAAEtE;QAAe;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACNxE,OAAA;QACE2F,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE1E,UAAW;QAClB2E,QAAQ,EAAEC,CAAC,IAAI3E,aAAa,CAAC2E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CI,WAAW,EAAC,mBAAmB;QAC/B9B,KAAK,EAAE;UAAEC,OAAO,EAAE,KAAK;UAAE8B,KAAK,EAAE,KAAK;UAAEC,WAAW,EAAE;QAAO;MAAE;QAAA7B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,eACFxE,OAAA;QAAQ4E,OAAO,EAAEd,WAAY;QAACI,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAM,CAAE;QAAAC,QAAA,EAAC;MAEzD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtE,EAAA,CAxLuBD,QAAQ;AAAAkG,EAAA,GAARlG,QAAQ;AAAA,IAAAkG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}