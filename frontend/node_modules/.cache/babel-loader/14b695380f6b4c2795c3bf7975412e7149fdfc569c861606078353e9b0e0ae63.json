{"ast":null,"code":"var _jsxFileName = \"D:\\\\SCALER\\\\second_year\\\\Project\\\\skillsync\\\\frontend\\\\src\\\\pages\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { db } from \"../firebase\";\nimport { collection, query, where, getDocs, updateDoc, doc, orderBy, addDoc, onSnapshot, serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messages() {\n  _s();\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [allUsers, setAllUsers] = useState([]);\n  const [requests, setRequests] = useState([]);\n  const [acceptedUsers, setAcceptedUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [unreadCounts, setUnreadCounts] = useState({});\n  const messagesEndRef = useRef(null);\n\n  // Fetch all users\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const snapshot = await getDocs(collection(db, \"users\"));\n      const users = snapshot.docs.map(doc => doc.data());\n      setAllUsers(users);\n    };\n    fetchUsers();\n  }, []);\n\n  // Fetch incoming requests\n  useEffect(() => {\n    if (!allUsers.length) return;\n    const q = query(collection(db, \"requests\"), where(\"toId\", \"==\", user.googleId));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const reqs = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setRequests(reqs.filter(r => r.status === \"pending\"));\n    });\n    return () => unsubscribe();\n  }, [allUsers]);\n\n  // Fetch accepted users\n  useEffect(() => {\n    if (!allUsers.length) return;\n    const q = query(collection(db, \"requests\"), where(\"status\", \"==\", \"accepted\"));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      let accepted = snapshot.docs.map(doc => doc.data()).filter(r => r.fromId === user.googleId || r.toId === user.googleId).map(r => {\n        const otherId = r.fromId === user.googleId ? r.toId : r.fromId;\n        const otherUser = allUsers.find(u => u.googleId === otherId);\n        return otherUser ? {\n          id: otherId,\n          name: otherUser.name\n        } : null;\n      }).filter(Boolean);\n      const unique = Array.from(new Map(accepted.map(u => [u.id, u])).values());\n      setAcceptedUsers(unique);\n    });\n    return () => unsubscribe();\n  }, [allUsers]);\n\n  // Fetch messages\n  useEffect(() => {\n    if (!selectedUser || !allUsers.length) return;\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\n    const q = query(collection(db, \"messages\"), where(\"chatId\", \"==\", chatId), orderBy(\"timestamp\", \"asc\"));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const msgs = snapshot.docs.map(doc => doc.data());\n      setMessages(msgs);\n\n      // Browser notification for incoming messages\n      if (msgs.length > 0) {\n        const lastMessage = msgs[msgs.length - 1];\n        if (lastMessage.fromId !== user.googleId && Notification.permission === \"granted\") {\n          new Notification(`New message from ${selectedUser.name}`, {\n            body: lastMessage.message\n          });\n        }\n      }\n    });\n    return () => unsubscribe();\n  }, [selectedUser, allUsers]);\n\n  // Auto scroll to bottom\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // Track unread messages\n  useEffect(() => {\n    const q = query(collection(db, \"messages\"), where(\"toId\", \"==\", user.googleId), where(\"read\", \"==\", false));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const counts = {};\n      snapshot.docs.forEach(docSnap => {\n        const msg = docSnap.data();\n        const otherId = msg.fromId;\n        counts[otherId] = (counts[otherId] || 0) + 1;\n      });\n      setUnreadCounts(counts);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // Mark messages as read when a chat is opened\n  useEffect(() => {\n    if (!selectedUser) return;\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\n    const q = query(collection(db, \"messages\"), where(\"chatId\", \"==\", chatId), where(\"toId\", \"==\", user.googleId), where(\"read\", \"==\", false));\n    const markRead = async () => {\n      const snapshot = await getDocs(q);\n      snapshot.docs.forEach(async docSnap => {\n        await updateDoc(doc(db, \"messages\", docSnap.id), {\n          read: true\n        });\n      });\n    };\n    markRead();\n  }, [selectedUser]);\n\n  // Request browser notification permission\n  useEffect(() => {\n    if (\"Notification\" in window) Notification.requestPermission();\n  }, []);\n  const acceptRequest = async req => {\n    const requestRef = doc(db, \"requests\", req.id);\n    await updateDoc(requestRef, {\n      status: \"accepted\"\n    });\n  };\n  const rejectRequest = async req => {\n    const requestRef = doc(db, \"requests\", req.id);\n    await updateDoc(requestRef, {\n      status: \"rejected\"\n    });\n  };\n  const sendMessage = async () => {\n    if (!newMessage.trim() || !selectedUser) return;\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\n    await addDoc(collection(db, \"messages\"), {\n      chatId,\n      fromId: user.googleId,\n      toId: selectedUser.id,\n      message: newMessage,\n      timestamp: serverTimestamp(),\n      read: false // âœ… New\n    });\n    setNewMessage(\"\");\n  };\n\n  // --- UI ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"80vh\",\n      margin: \"20px auto\",\n      maxWidth: \"900px\",\n      border: \"1px solid #ddd\",\n      borderRadius: \"10px\",\n      overflow: \"hidden\",\n      boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"30%\",\n        borderRight: \"1px solid #ddd\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        background: \"#f8f9fa\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\",\n          padding: \"15px 0\",\n          borderBottom: \"1px solid #ddd\"\n        },\n        children: \"Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"10px\",\n          borderBottom: \"1px solid #ddd\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Requests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), requests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"14px\",\n            color: \"#777\"\n          },\n          children: \"No requests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this) : requests.map(req => {\n          const fromUser = allUsers.find(u => u.googleId === req.fromId);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: \"#fff\",\n              padding: \"8px\",\n              borderRadius: \"8px\",\n              marginBottom: \"8px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: \"0 0 5px 0\"\n              },\n              children: [\"From: \", (fromUser === null || fromUser === void 0 ? void 0 : fromUser.name) || \"Unknown\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => acceptRequest(req),\n              style: {\n                marginRight: \"5px\",\n                background: \"#4CAF50\",\n                color: \"white\",\n                border: \"none\",\n                padding: \"5px 10px\",\n                borderRadius: \"5px\",\n                cursor: \"pointer\"\n              },\n              children: \"Accept\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => rejectRequest(req),\n              style: {\n                background: \"#f44336\",\n                color: \"white\",\n                border: \"none\",\n                padding: \"5px 10px\",\n                borderRadius: \"5px\",\n                cursor: \"pointer\"\n              },\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this)]\n          }, req.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: \"auto\"\n        },\n        children: [acceptedUsers.map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setSelectedUser(u),\n          style: {\n            padding: \"12px 15px\",\n            cursor: \"pointer\",\n            background: (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === u.id ? \"#d1f0ff\" : \"transparent\",\n            borderBottom: \"1px solid #eee\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            transition: \"background 0.2s\"\n          },\n          onMouseEnter: e => e.currentTarget.style.background = \"#eef6ff\",\n          onMouseLeave: e => e.currentTarget.style.background = (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === u.id ? \"#d1f0ff\" : \"transparent\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: u.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), unreadCounts[u.id] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              background: \"red\",\n              color: \"white\",\n              borderRadius: \"50%\",\n              padding: \"2px 7px\",\n              fontSize: \"12px\"\n            },\n            children: unreadCounts[u.id]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this)]\n        }, u.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)), acceptedUsers.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\",\n            color: \"#777\",\n            marginTop: \"10px\"\n          },\n          children: \"No chats yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"15px\",\n            borderBottom: \"1px solid #ddd\",\n            background: \"#f0f0f0\",\n            fontWeight: \"bold\"\n          },\n          children: [\"Chat with \", selectedUser.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            overflowY: \"auto\",\n            padding: \"15px\",\n            background: \"#e5ddd5\"\n          },\n          children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: \"center\",\n              color: \"#666\"\n            },\n            children: \"No messages yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this), messages.map((msg, idx) => {\n            const isSent = msg.fromId === user.googleId;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: isSent ? \"flex-end\" : \"flex-start\",\n                marginBottom: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  maxWidth: \"70%\",\n                  padding: \"10px 15px\",\n                  borderRadius: \"15px\",\n                  background: isSent ? \"#4CAF50\" : \"#fff\",\n                  color: isSent ? \"#fff\" : \"#000\",\n                  boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\",\n                  wordBreak: \"break-word\"\n                },\n                children: msg.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 21\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            padding: \"10px\",\n            borderTop: \"1px solid #ddd\",\n            background: \"#fafafa\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            onKeyDown: e => e.key === \"Enter\" && sendMessage() // âœ… Press Enter to send\n            ,\n            placeholder: \"Type a message...\",\n            style: {\n              flex: 1,\n              padding: \"10px\",\n              borderRadius: \"20px\",\n              border: \"1px solid #ccc\",\n              outline: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            style: {\n              marginLeft: \"10px\",\n              padding: \"10px 15px\",\n              background: \"#4CAF50\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"20px\",\n              cursor: \"pointer\"\n            },\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          color: \"#666\",\n          fontSize: \"18px\"\n        },\n        children: \"Select a chat to start messaging\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s(Messages, \"P0cLVecvq8AyfyN33dWpySDkSbw=\");\n_c = Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","useRef","db","collection","query","where","getDocs","updateDoc","doc","orderBy","addDoc","onSnapshot","serverTimestamp","jsxDEV","_jsxDEV","Fragment","_Fragment","Messages","_s","user","JSON","parse","localStorage","getItem","allUsers","setAllUsers","requests","setRequests","acceptedUsers","setAcceptedUsers","selectedUser","setSelectedUser","messages","setMessages","newMessage","setNewMessage","unreadCounts","setUnreadCounts","messagesEndRef","fetchUsers","snapshot","users","docs","map","data","length","q","googleId","unsubscribe","reqs","id","filter","r","status","accepted","fromId","toId","otherId","otherUser","find","u","name","Boolean","unique","Array","from","Map","values","chatId","sort","join","msgs","lastMessage","Notification","permission","body","message","_messagesEndRef$curre","current","scrollIntoView","behavior","counts","forEach","docSnap","msg","markRead","read","window","requestPermission","acceptRequest","req","requestRef","rejectRequest","sendMessage","trim","timestamp","style","display","height","margin","maxWidth","border","borderRadius","overflow","boxShadow","children","width","borderRight","flexDirection","background","textAlign","padding","borderBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","color","fromUser","marginBottom","onClick","marginRight","cursor","flex","overflowY","justifyContent","alignItems","transition","onMouseEnter","e","currentTarget","onMouseLeave","marginTop","fontWeight","idx","isSent","wordBreak","ref","borderTop","type","value","onChange","target","onKeyDown","key","placeholder","outline","marginLeft","_c","$RefreshReg$"],"sources":["D:/SCALER/second_year/Project/skillsync/frontend/src/pages/Messages.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  updateDoc,\r\n  doc,\r\n  orderBy,\r\n  addDoc,\r\n  onSnapshot,\r\n  serverTimestamp,\r\n} from \"firebase/firestore\";\r\n\r\nexport default function Messages() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [requests, setRequests] = useState([]);\r\n  const [acceptedUsers, setAcceptedUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [unreadCounts, setUnreadCounts] = useState({});\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Fetch all users\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const snapshot = await getDocs(collection(db, \"users\"));\r\n      const users = snapshot.docs.map((doc) => doc.data());\r\n      setAllUsers(users);\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Fetch incoming requests\r\n  useEffect(() => {\r\n    if (!allUsers.length) return;\r\n    const q = query(collection(db, \"requests\"), where(\"toId\", \"==\", user.googleId));\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      const reqs = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n      setRequests(reqs.filter((r) => r.status === \"pending\"));\r\n    });\r\n    return () => unsubscribe();\r\n  }, [allUsers]);\r\n\r\n  // Fetch accepted users\r\n  useEffect(() => {\r\n    if (!allUsers.length) return;\r\n    const q = query(collection(db, \"requests\"), where(\"status\", \"==\", \"accepted\"));\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      let accepted = snapshot.docs\r\n        .map((doc) => doc.data())\r\n        .filter((r) => r.fromId === user.googleId || r.toId === user.googleId)\r\n        .map((r) => {\r\n          const otherId = r.fromId === user.googleId ? r.toId : r.fromId;\r\n          const otherUser = allUsers.find((u) => u.googleId === otherId);\r\n          return otherUser ? { id: otherId, name: otherUser.name } : null;\r\n        })\r\n        .filter(Boolean);\r\n\r\n      const unique = Array.from(new Map(accepted.map((u) => [u.id, u])).values());\r\n      setAcceptedUsers(unique);\r\n    });\r\n    return () => unsubscribe();\r\n  }, [allUsers]);\r\n\r\n  // Fetch messages\r\n  useEffect(() => {\r\n    if (!selectedUser || !allUsers.length) return;\r\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\r\n    const q = query(\r\n      collection(db, \"messages\"),\r\n      where(\"chatId\", \"==\", chatId),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      const msgs = snapshot.docs.map((doc) => doc.data());\r\n      setMessages(msgs);\r\n\r\n      // Browser notification for incoming messages\r\n      if (msgs.length > 0) {\r\n        const lastMessage = msgs[msgs.length - 1];\r\n        if (lastMessage.fromId !== user.googleId && Notification.permission === \"granted\") {\r\n          new Notification(`New message from ${selectedUser.name}`, {\r\n            body: lastMessage.message,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, [selectedUser, allUsers]);\r\n\r\n  // Auto scroll to bottom\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  // Track unread messages\r\n  useEffect(() => {\r\n    const q = query(\r\n      collection(db, \"messages\"),\r\n      where(\"toId\", \"==\", user.googleId),\r\n      where(\"read\", \"==\", false)\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      const counts = {};\r\n      snapshot.docs.forEach((docSnap) => {\r\n        const msg = docSnap.data();\r\n        const otherId = msg.fromId;\r\n        counts[otherId] = (counts[otherId] || 0) + 1;\r\n      });\r\n      setUnreadCounts(counts);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Mark messages as read when a chat is opened\r\n  useEffect(() => {\r\n    if (!selectedUser) return;\r\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\r\n    const q = query(\r\n      collection(db, \"messages\"),\r\n      where(\"chatId\", \"==\", chatId),\r\n      where(\"toId\", \"==\", user.googleId),\r\n      where(\"read\", \"==\", false)\r\n    );\r\n\r\n    const markRead = async () => {\r\n      const snapshot = await getDocs(q);\r\n      snapshot.docs.forEach(async (docSnap) => {\r\n        await updateDoc(doc(db, \"messages\", docSnap.id), { read: true });\r\n      });\r\n    };\r\n    markRead();\r\n  }, [selectedUser]);\r\n\r\n  // Request browser notification permission\r\n  useEffect(() => {\r\n    if (\"Notification\" in window) Notification.requestPermission();\r\n  }, []);\r\n\r\n  const acceptRequest = async (req) => {\r\n    const requestRef = doc(db, \"requests\", req.id);\r\n    await updateDoc(requestRef, { status: \"accepted\" });\r\n  };\r\n\r\n  const rejectRequest = async (req) => {\r\n    const requestRef = doc(db, \"requests\", req.id);\r\n    await updateDoc(requestRef, { status: \"rejected\" });\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!newMessage.trim() || !selectedUser) return;\r\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\r\n    await addDoc(collection(db, \"messages\"), {\r\n      chatId,\r\n      fromId: user.googleId,\r\n      toId: selectedUser.id,\r\n      message: newMessage,\r\n      timestamp: serverTimestamp(),\r\n      read: false, // âœ… New\r\n    });\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  // --- UI ---\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        height: \"80vh\",\r\n        margin: \"20px auto\",\r\n        maxWidth: \"900px\",\r\n        border: \"1px solid #ddd\",\r\n        borderRadius: \"10px\",\r\n        overflow: \"hidden\",\r\n        boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\",\r\n      }}\r\n    >\r\n      {/* Left Sidebar: Chats + Requests */}\r\n      <div\r\n        style={{\r\n          width: \"30%\",\r\n          borderRight: \"1px solid #ddd\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          background: \"#f8f9fa\",\r\n        }}\r\n      >\r\n        <h2 style={{ textAlign: \"center\", padding: \"15px 0\", borderBottom: \"1px solid #ddd\" }}>\r\n          Chats\r\n        </h2>\r\n\r\n        {/* Incoming Requests */}\r\n        <div style={{ padding: \"10px\", borderBottom: \"1px solid #ddd\" }}>\r\n          <h4>Requests</h4>\r\n          {requests.length === 0 ? (\r\n            <p style={{ fontSize: \"14px\", color: \"#777\" }}>No requests</p>\r\n          ) : (\r\n            requests.map((req) => {\r\n              const fromUser = allUsers.find((u) => u.googleId === req.fromId);\r\n              return (\r\n                <div\r\n                  key={req.id}\r\n                  style={{\r\n                    background: \"#fff\",\r\n                    padding: \"8px\",\r\n                    borderRadius: \"8px\",\r\n                    marginBottom: \"8px\",\r\n                  }}\r\n                >\r\n                  <p style={{ margin: \"0 0 5px 0\" }}>From: {fromUser?.name || \"Unknown\"}</p>\r\n                  <button\r\n                    onClick={() => acceptRequest(req)}\r\n                    style={{\r\n                      marginRight: \"5px\",\r\n                      background: \"#4CAF50\",\r\n                      color: \"white\",\r\n                      border: \"none\",\r\n                      padding: \"5px 10px\",\r\n                      borderRadius: \"5px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    Accept\r\n                  </button>\r\n                  <button\r\n                    onClick={() => rejectRequest(req)}\r\n                    style={{\r\n                      background: \"#f44336\",\r\n                      color: \"white\",\r\n                      border: \"none\",\r\n                      padding: \"5px 10px\",\r\n                      borderRadius: \"5px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    Reject\r\n                  </button>\r\n                </div>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n\r\n        {/* Accepted Users (Chat List) */}\r\n        <div style={{ flex: 1, overflowY: \"auto\" }}>\r\n          {acceptedUsers.map((u) => (\r\n            <div\r\n              key={u.id}\r\n              onClick={() => setSelectedUser(u)}\r\n              style={{\r\n                padding: \"12px 15px\",\r\n                cursor: \"pointer\",\r\n                background:\r\n                  selectedUser?.id === u.id ? \"#d1f0ff\" : \"transparent\",\r\n                borderBottom: \"1px solid #eee\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                transition: \"background 0.2s\",\r\n              }}\r\n              onMouseEnter={(e) => (e.currentTarget.style.background = \"#eef6ff\")}\r\n              onMouseLeave={(e) =>\r\n                (e.currentTarget.style.background =\r\n                  selectedUser?.id === u.id ? \"#d1f0ff\" : \"transparent\")\r\n              }\r\n            >\r\n              <strong>{u.name}</strong>\r\n              {unreadCounts[u.id] > 0 && (\r\n                <span\r\n                  style={{\r\n                    background: \"red\",\r\n                    color: \"white\",\r\n                    borderRadius: \"50%\",\r\n                    padding: \"2px 7px\",\r\n                    fontSize: \"12px\",\r\n                  }}\r\n                >\r\n                  {unreadCounts[u.id]}\r\n                </span>\r\n              )}\r\n            </div>\r\n          ))}\r\n          {acceptedUsers.length === 0 && (\r\n            <p style={{ textAlign: \"center\", color: \"#777\", marginTop: \"10px\" }}>No chats yet</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right Chat Section */}\r\n      <div style={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\r\n        {selectedUser ? (\r\n          <>\r\n            {/* Header */}\r\n            <div\r\n              style={{\r\n                padding: \"15px\",\r\n                borderBottom: \"1px solid #ddd\",\r\n                background: \"#f0f0f0\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              Chat with {selectedUser.name}\r\n            </div>\r\n\r\n            {/* Chat messages */}\r\n            <div\r\n              style={{\r\n                flex: 1,\r\n                overflowY: \"auto\",\r\n                padding: \"15px\",\r\n                background: \"#e5ddd5\",\r\n              }}\r\n            >\r\n              {messages.length === 0 && (\r\n                <p style={{ textAlign: \"center\", color: \"#666\" }}>No messages yet.</p>\r\n              )}\r\n              {messages.map((msg, idx) => {\r\n                const isSent = msg.fromId === user.googleId;\r\n                return (\r\n                  <div\r\n                    key={idx}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: isSent ? \"flex-end\" : \"flex-start\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        maxWidth: \"70%\",\r\n                        padding: \"10px 15px\",\r\n                        borderRadius: \"15px\",\r\n                        background: isSent ? \"#4CAF50\" : \"#fff\",\r\n                        color: isSent ? \"#fff\" : \"#000\",\r\n                        boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\",\r\n                        wordBreak: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {msg.message}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              <div ref={messagesEndRef} />\r\n            </div>\r\n\r\n            {/* Input */}\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                padding: \"10px\",\r\n                borderTop: \"1px solid #ddd\",\r\n                background: \"#fafafa\",\r\n              }}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                onKeyDown={(e) => e.key === \"Enter\" && sendMessage()} // âœ… Press Enter to send\r\n                placeholder=\"Type a message...\"\r\n                style={{\r\n                  flex: 1,\r\n                  padding: \"10px\",\r\n                  borderRadius: \"20px\",\r\n                  border: \"1px solid #ccc\",\r\n                  outline: \"none\",\r\n                }}\r\n              />\r\n              <button\r\n                onClick={sendMessage}\r\n                style={{\r\n                  marginLeft: \"10px\",\r\n                  padding: \"10px 15px\",\r\n                  background: \"#4CAF50\",\r\n                  color: \"white\",\r\n                  border: \"none\",\r\n                  borderRadius: \"20px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              flex: 1,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              color: \"#666\",\r\n              fontSize: \"18px\",\r\n            }}\r\n          >\r\n            Select a chat to start messaging\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}