{"ast":null,"code":"import _objectSpread from\"D:/SCALER/second_year/Project/skillsync/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from\"react\";import{db}from\"../firebase\";import{collection,query,where,getDocs,updateDoc,doc,orderBy,addDoc,onSnapshot,serverTimestamp}from\"firebase/firestore\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Messages(){const user=JSON.parse(localStorage.getItem(\"user\"));const[allUsers,setAllUsers]=useState([]);const[requests,setRequests]=useState([]);const[acceptedUsers,setAcceptedUsers]=useState([]);const[selectedUser,setSelectedUser]=useState(null);const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState(\"\");const[unreadCounts,setUnreadCounts]=useState({});const messagesEndRef=useRef(null);// Fetch all users\nuseEffect(()=>{const fetchUsers=async()=>{const snapshot=await getDocs(collection(db,\"users\"));const users=snapshot.docs.map(doc=>doc.data());setAllUsers(users);};fetchUsers();},[]);// Fetch incoming requests\nuseEffect(()=>{if(!allUsers.length)return;const q=query(collection(db,\"requests\"),where(\"toId\",\"==\",user.googleId));const unsubscribe=onSnapshot(q,snapshot=>{const reqs=snapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));setRequests(reqs.filter(r=>r.status===\"pending\"));});return()=>unsubscribe();},[allUsers]);// Fetch accepted users\nuseEffect(()=>{if(!allUsers.length)return;const q=query(collection(db,\"requests\"),where(\"status\",\"==\",\"accepted\"));const unsubscribe=onSnapshot(q,snapshot=>{let accepted=snapshot.docs.map(doc=>doc.data()).filter(r=>r.fromId===user.googleId||r.toId===user.googleId).map(r=>{const otherId=r.fromId===user.googleId?r.toId:r.fromId;const otherUser=allUsers.find(u=>u.googleId===otherId);return otherUser?{id:otherId,name:otherUser.name}:null;}).filter(Boolean);const unique=Array.from(new Map(accepted.map(u=>[u.id,u])).values());setAcceptedUsers(unique);});return()=>unsubscribe();},[allUsers]);// Fetch messages\nuseEffect(()=>{if(!selectedUser||!allUsers.length)return;const chatId=[user.googleId,selectedUser.id].sort().join(\"_\");const q=query(collection(db,\"messages\"),where(\"chatId\",\"==\",chatId),orderBy(\"timestamp\",\"asc\"));const unsubscribe=onSnapshot(q,snapshot=>{const msgs=snapshot.docs.map(doc=>doc.data());setMessages(msgs);});return()=>unsubscribe();},[selectedUser,allUsers]);// Auto scroll to bottom\nuseEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});},[messages]);// Track unread messages\nuseEffect(()=>{const q=query(collection(db,\"messages\"),where(\"toId\",\"==\",user.googleId),where(\"read\",\"==\",false));const unsubscribe=onSnapshot(q,snapshot=>{const counts={};snapshot.docs.forEach(docSnap=>{const msg=docSnap.data();const otherId=msg.fromId;counts[otherId]=(counts[otherId]||0)+1;});setUnreadCounts(counts);});return()=>unsubscribe();},[]);// Mark messages as read when a chat is opened\nuseEffect(()=>{if(!selectedUser)return;const chatId=[user.googleId,selectedUser.id].sort().join(\"_\");const q=query(collection(db,\"messages\"),where(\"chatId\",\"==\",chatId),where(\"toId\",\"==\",user.googleId),where(\"read\",\"==\",false));const markRead=async()=>{const snapshot=await getDocs(q);snapshot.docs.forEach(async docSnap=>{await updateDoc(doc(db,\"messages\",docSnap.id),{read:true});});};markRead();},[selectedUser]);const acceptRequest=async req=>{const requestRef=doc(db,\"requests\",req.id);await updateDoc(requestRef,{status:\"accepted\"});const fromUser=allUsers.find(u=>u.googleId===req.fromId);alert(\"Request from \".concat((fromUser===null||fromUser===void 0?void 0:fromUser.name)||\"Someone\",\" has been accepted.\"));};const rejectRequest=async req=>{const requestRef=doc(db,\"requests\",req.id);await updateDoc(requestRef,{status:\"rejected\"});const fromUser=allUsers.find(u=>u.googleId===req.fromId);alert(\"Request from \".concat((fromUser===null||fromUser===void 0?void 0:fromUser.name)||\"Someone\",\" has been rejected.\"));};const sendMessage=async()=>{if(!newMessage.trim()||!selectedUser)return;const chatId=[user.googleId,selectedUser.id].sort().join(\"_\");await addDoc(collection(db,\"messages\"),{chatId,fromId:user.googleId,toId:selectedUser.id,message:newMessage,timestamp:serverTimestamp(),read:false});setNewMessage(\"\");};// --- UI ---\nreturn/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",height:\"80vh\",margin:\"20px auto\",maxWidth:\"900px\",border:\"1px solid #ddd\",borderRadius:\"10px\",overflow:\"hidden\",boxShadow:\"0 4px 8px rgba(0,0,0,0.1)\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{width:\"30%\",borderRight:\"1px solid #ddd\",display:\"flex\",flexDirection:\"column\",background:\"#f8f9fa\"},children:[/*#__PURE__*/_jsx(\"h2\",{style:{textAlign:\"center\",padding:\"15px 0\",borderBottom:\"1px solid #ddd\"},children:\"Chats\"}),/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"10px\",borderBottom:\"1px solid #ddd\"},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Requests\"}),requests.length===0?/*#__PURE__*/_jsx(\"p\",{style:{fontSize:\"14px\",color:\"#777\"},children:\"No requests\"}):requests.map(req=>{const fromUser=allUsers.find(u=>u.googleId===req.fromId);return/*#__PURE__*/_jsxs(\"div\",{style:{background:\"#fff\",padding:\"8px\",borderRadius:\"8px\",marginBottom:\"8px\"},children:[/*#__PURE__*/_jsxs(\"p\",{style:{margin:\"0 0 5px 0\"},children:[\"From: \",(fromUser===null||fromUser===void 0?void 0:fromUser.name)||\"Unknown\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>acceptRequest(req),style:{marginRight:\"5px\",background:\"#4CAF50\",color:\"white\",border:\"none\",padding:\"5px 10px\",borderRadius:\"5px\",cursor:\"pointer\"},children:\"Accept\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>rejectRequest(req),style:{background:\"#f44336\",color:\"white\",border:\"none\",padding:\"5px 10px\",borderRadius:\"5px\",cursor:\"pointer\"},children:\"Reject\"})]},req.id);})]}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,overflowY:\"auto\"},children:[acceptedUsers.map(u=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>setSelectedUser(u),style:{padding:\"12px 15px\",cursor:\"pointer\",background:(selectedUser===null||selectedUser===void 0?void 0:selectedUser.id)===u.id?\"#d1f0ff\":\"transparent\",borderBottom:\"1px solid #eee\",display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",transition:\"background 0.2s\"},onMouseEnter:e=>e.currentTarget.style.background=\"#eef6ff\",onMouseLeave:e=>e.currentTarget.style.background=(selectedUser===null||selectedUser===void 0?void 0:selectedUser.id)===u.id?\"#d1f0ff\":\"transparent\",children:[/*#__PURE__*/_jsx(\"strong\",{children:u.name}),unreadCounts[u.id]>0&&/*#__PURE__*/_jsx(\"span\",{style:{background:\"red\",color:\"white\",borderRadius:\"50%\",padding:\"2px 7px\",fontSize:\"12px\"},children:unreadCounts[u.id]})]},u.id)),acceptedUsers.length===0&&/*#__PURE__*/_jsx(\"p\",{style:{textAlign:\"center\",color:\"#777\",marginTop:\"10px\"},children:\"No chats yet\"})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{flex:1,display:\"flex\",flexDirection:\"column\"},children:selectedUser?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"15px\",borderBottom:\"1px solid #ddd\",background:\"#f0f0f0\",fontWeight:\"bold\"},children:[\"Chat with \",selectedUser.name]}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,overflowY:\"auto\",padding:\"15px\",background:\"#e5ddd5\"},children:[messages.length===0&&/*#__PURE__*/_jsx(\"p\",{style:{textAlign:\"center\",color:\"#666\"},children:\"No messages yet.\"}),messages.map((msg,idx)=>{const isSent=msg.fromId===user.googleId;return/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:isSent?\"flex-end\":\"flex-start\",marginBottom:\"10px\"},children:/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:\"70%\",padding:\"10px 15px\",borderRadius:\"15px\",background:isSent?\"#4CAF50\":\"#fff\",color:isSent?\"#fff\":\"#000\",boxShadow:\"0 1px 3px rgba(0,0,0,0.1)\",wordBreak:\"break-word\"},children:msg.message})},idx);}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",padding:\"10px\",borderTop:\"1px solid #ddd\",background:\"#fafafa\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newMessage,onChange:e=>setNewMessage(e.target.value),onKeyDown:e=>e.key===\"Enter\"&&sendMessage(),placeholder:\"Type a message...\",style:{flex:1,padding:\"10px\",borderRadius:\"20px\",border:\"1px solid #ccc\",outline:\"none\"}}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,style:{marginLeft:\"10px\",padding:\"10px 15px\",background:\"#4CAF50\",color:\"white\",border:\"none\",borderRadius:\"20px\",cursor:\"pointer\"},children:\"Send\"})]})]}):/*#__PURE__*/_jsx(\"div\",{style:{flex:1,display:\"flex\",alignItems:\"center\",justifyContent:\"center\",color:\"#666\",fontSize:\"18px\"},children:\"Select a chat to start messaging\"})})]});}","map":{"version":3,"names":["React","useState","useEffect","useRef","db","collection","query","where","getDocs","updateDoc","doc","orderBy","addDoc","onSnapshot","serverTimestamp","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Messages","user","JSON","parse","localStorage","getItem","allUsers","setAllUsers","requests","setRequests","acceptedUsers","setAcceptedUsers","selectedUser","setSelectedUser","messages","setMessages","newMessage","setNewMessage","unreadCounts","setUnreadCounts","messagesEndRef","fetchUsers","snapshot","users","docs","map","data","length","q","googleId","unsubscribe","reqs","_objectSpread","id","filter","r","status","accepted","fromId","toId","otherId","otherUser","find","u","name","Boolean","unique","Array","from","Map","values","chatId","sort","join","msgs","_messagesEndRef$curre","current","scrollIntoView","behavior","counts","forEach","docSnap","msg","markRead","read","acceptRequest","req","requestRef","fromUser","alert","concat","rejectRequest","sendMessage","trim","message","timestamp","style","display","height","margin","maxWidth","border","borderRadius","overflow","boxShadow","children","width","borderRight","flexDirection","background","textAlign","padding","borderBottom","fontSize","color","marginBottom","onClick","marginRight","cursor","flex","overflowY","justifyContent","alignItems","transition","onMouseEnter","e","currentTarget","onMouseLeave","marginTop","fontWeight","idx","isSent","wordBreak","ref","borderTop","type","value","onChange","target","onKeyDown","key","placeholder","outline","marginLeft"],"sources":["D:/SCALER/second_year/Project/skillsync/frontend/src/pages/Messages.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  updateDoc,\r\n  doc,\r\n  orderBy,\r\n  addDoc,\r\n  onSnapshot,\r\n  serverTimestamp,\r\n} from \"firebase/firestore\";\r\n\r\nexport default function Messages() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [requests, setRequests] = useState([]);\r\n  const [acceptedUsers, setAcceptedUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [unreadCounts, setUnreadCounts] = useState({});\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Fetch all users\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const snapshot = await getDocs(collection(db, \"users\"));\r\n      const users = snapshot.docs.map((doc) => doc.data());\r\n      setAllUsers(users);\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Fetch incoming requests\r\n  useEffect(() => {\r\n    if (!allUsers.length) return;\r\n    const q = query(collection(db, \"requests\"), where(\"toId\", \"==\", user.googleId));\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      const reqs = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n      setRequests(reqs.filter((r) => r.status === \"pending\"));\r\n    });\r\n    return () => unsubscribe();\r\n  }, [allUsers]);\r\n\r\n  // Fetch accepted users\r\n  useEffect(() => {\r\n    if (!allUsers.length) return;\r\n    const q = query(collection(db, \"requests\"), where(\"status\", \"==\", \"accepted\"));\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      let accepted = snapshot.docs\r\n        .map((doc) => doc.data())\r\n        .filter((r) => r.fromId === user.googleId || r.toId === user.googleId)\r\n        .map((r) => {\r\n          const otherId = r.fromId === user.googleId ? r.toId : r.fromId;\r\n          const otherUser = allUsers.find((u) => u.googleId === otherId);\r\n          return otherUser ? { id: otherId, name: otherUser.name } : null;\r\n        })\r\n        .filter(Boolean);\r\n\r\n      const unique = Array.from(new Map(accepted.map((u) => [u.id, u])).values());\r\n      setAcceptedUsers(unique);\r\n    });\r\n    return () => unsubscribe();\r\n  }, [allUsers]);\r\n\r\n  // Fetch messages\r\n  useEffect(() => {\r\n    if (!selectedUser || !allUsers.length) return;\r\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\r\n    const q = query(\r\n      collection(db, \"messages\"),\r\n      where(\"chatId\", \"==\", chatId),\r\n      orderBy(\"timestamp\", \"asc\")\r\n    );\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      const msgs = snapshot.docs.map((doc) => doc.data());\r\n      setMessages(msgs);\r\n    });\r\n    return () => unsubscribe();\r\n  }, [selectedUser, allUsers]);\r\n\r\n  // Auto scroll to bottom\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  // Track unread messages\r\n  useEffect(() => {\r\n    const q = query(\r\n      collection(db, \"messages\"),\r\n      where(\"toId\", \"==\", user.googleId),\r\n      where(\"read\", \"==\", false)\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      const counts = {};\r\n      snapshot.docs.forEach((docSnap) => {\r\n        const msg = docSnap.data();\r\n        const otherId = msg.fromId;\r\n        counts[otherId] = (counts[otherId] || 0) + 1;\r\n      });\r\n      setUnreadCounts(counts);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Mark messages as read when a chat is opened\r\n  useEffect(() => {\r\n    if (!selectedUser) return;\r\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\r\n    const q = query(\r\n      collection(db, \"messages\"),\r\n      where(\"chatId\", \"==\", chatId),\r\n      where(\"toId\", \"==\", user.googleId),\r\n      where(\"read\", \"==\", false)\r\n    );\r\n\r\n    const markRead = async () => {\r\n      const snapshot = await getDocs(q);\r\n      snapshot.docs.forEach(async (docSnap) => {\r\n        await updateDoc(doc(db, \"messages\", docSnap.id), { read: true });\r\n      });\r\n    };\r\n    markRead();\r\n  }, [selectedUser]);\r\n\r\n  const acceptRequest = async (req) => {\r\n    const requestRef = doc(db, \"requests\", req.id);\r\n    await updateDoc(requestRef, { status: \"accepted\" });\r\n    const fromUser = allUsers.find((u) => u.googleId === req.fromId);\r\n    alert(`Request from ${fromUser?.name || \"Someone\"} has been accepted.`);\r\n  };\r\n\r\n  const rejectRequest = async (req) => {\r\n    const requestRef = doc(db, \"requests\", req.id);\r\n    await updateDoc(requestRef, { status: \"rejected\" });\r\n    const fromUser = allUsers.find((u) => u.googleId === req.fromId);\r\n    alert(`Request from ${fromUser?.name || \"Someone\"} has been rejected.`);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!newMessage.trim() || !selectedUser) return;\r\n    const chatId = [user.googleId, selectedUser.id].sort().join(\"_\");\r\n    await addDoc(collection(db, \"messages\"), {\r\n      chatId,\r\n      fromId: user.googleId,\r\n      toId: selectedUser.id,\r\n      message: newMessage,\r\n      timestamp: serverTimestamp(),\r\n      read: false,\r\n    });\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  // --- UI ---\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        height: \"80vh\",\r\n        margin: \"20px auto\",\r\n        maxWidth: \"900px\",\r\n        border: \"1px solid #ddd\",\r\n        borderRadius: \"10px\",\r\n        overflow: \"hidden\",\r\n        boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\",\r\n      }}\r\n    >\r\n      {/* Left Sidebar: Chats + Requests */}\r\n      <div\r\n        style={{\r\n          width: \"30%\",\r\n          borderRight: \"1px solid #ddd\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          background: \"#f8f9fa\",\r\n        }}\r\n      >\r\n        <h2 style={{ textAlign: \"center\", padding: \"15px 0\", borderBottom: \"1px solid #ddd\" }}>\r\n          Chats\r\n        </h2>\r\n\r\n        {/* Incoming Requests */}\r\n        <div style={{ padding: \"10px\", borderBottom: \"1px solid #ddd\" }}>\r\n          <h4>Requests</h4>\r\n          {requests.length === 0 ? (\r\n            <p style={{ fontSize: \"14px\", color: \"#777\" }}>No requests</p>\r\n          ) : (\r\n            requests.map((req) => {\r\n              const fromUser = allUsers.find((u) => u.googleId === req.fromId);\r\n              return (\r\n                <div\r\n                  key={req.id}\r\n                  style={{\r\n                    background: \"#fff\",\r\n                    padding: \"8px\",\r\n                    borderRadius: \"8px\",\r\n                    marginBottom: \"8px\",\r\n                  }}\r\n                >\r\n                  <p style={{ margin: \"0 0 5px 0\" }}>From: {fromUser?.name || \"Unknown\"}</p>\r\n                  <button\r\n                    onClick={() => acceptRequest(req)}\r\n                    style={{\r\n                      marginRight: \"5px\",\r\n                      background: \"#4CAF50\",\r\n                      color: \"white\",\r\n                      border: \"none\",\r\n                      padding: \"5px 10px\",\r\n                      borderRadius: \"5px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    Accept\r\n                  </button>\r\n                  <button\r\n                    onClick={() => rejectRequest(req)}\r\n                    style={{\r\n                      background: \"#f44336\",\r\n                      color: \"white\",\r\n                      border: \"none\",\r\n                      padding: \"5px 10px\",\r\n                      borderRadius: \"5px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    Reject\r\n                  </button>\r\n                </div>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n\r\n        {/* Accepted Users (Chat List) */}\r\n        <div style={{ flex: 1, overflowY: \"auto\" }}>\r\n          {acceptedUsers.map((u) => (\r\n            <div\r\n              key={u.id}\r\n              onClick={() => setSelectedUser(u)}\r\n              style={{\r\n                padding: \"12px 15px\",\r\n                cursor: \"pointer\",\r\n                background:\r\n                  selectedUser?.id === u.id ? \"#d1f0ff\" : \"transparent\",\r\n                borderBottom: \"1px solid #eee\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                transition: \"background 0.2s\",\r\n              }}\r\n              onMouseEnter={(e) => (e.currentTarget.style.background = \"#eef6ff\")}\r\n              onMouseLeave={(e) =>\r\n                (e.currentTarget.style.background =\r\n                  selectedUser?.id === u.id ? \"#d1f0ff\" : \"transparent\")\r\n              }\r\n            >\r\n              <strong>{u.name}</strong>\r\n              {unreadCounts[u.id] > 0 && (\r\n                <span\r\n                  style={{\r\n                    background: \"red\",\r\n                    color: \"white\",\r\n                    borderRadius: \"50%\",\r\n                    padding: \"2px 7px\",\r\n                    fontSize: \"12px\",\r\n                  }}\r\n                >\r\n                  {unreadCounts[u.id]}\r\n                </span>\r\n              )}\r\n            </div>\r\n          ))}\r\n          {acceptedUsers.length === 0 && (\r\n            <p style={{ textAlign: \"center\", color: \"#777\", marginTop: \"10px\" }}>No chats yet</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right Chat Section */}\r\n      <div style={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\r\n        {selectedUser ? (\r\n          <>\r\n            {/* Header */}\r\n            <div\r\n              style={{\r\n                padding: \"15px\",\r\n                borderBottom: \"1px solid #ddd\",\r\n                background: \"#f0f0f0\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              Chat with {selectedUser.name}\r\n            </div>\r\n\r\n            {/* Chat messages */}\r\n            <div\r\n              style={{\r\n                flex: 1,\r\n                overflowY: \"auto\",\r\n                padding: \"15px\",\r\n                background: \"#e5ddd5\",\r\n              }}\r\n            >\r\n              {messages.length === 0 && (\r\n                <p style={{ textAlign: \"center\", color: \"#666\" }}>No messages yet.</p>\r\n              )}\r\n              {messages.map((msg, idx) => {\r\n                const isSent = msg.fromId === user.googleId;\r\n                return (\r\n                  <div\r\n                    key={idx}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: isSent ? \"flex-end\" : \"flex-start\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        maxWidth: \"70%\",\r\n                        padding: \"10px 15px\",\r\n                        borderRadius: \"15px\",\r\n                        background: isSent ? \"#4CAF50\" : \"#fff\",\r\n                        color: isSent ? \"#fff\" : \"#000\",\r\n                        boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\",\r\n                        wordBreak: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {msg.message}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              <div ref={messagesEndRef} />\r\n            </div>\r\n\r\n            {/* Input */}\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                padding: \"10px\",\r\n                borderTop: \"1px solid #ddd\",\r\n                background: \"#fafafa\",\r\n              }}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n                placeholder=\"Type a message...\"\r\n                style={{\r\n                  flex: 1,\r\n                  padding: \"10px\",\r\n                  borderRadius: \"20px\",\r\n                  border: \"1px solid #ccc\",\r\n                  outline: \"none\",\r\n                }}\r\n              />\r\n              <button\r\n                onClick={sendMessage}\r\n                style={{\r\n                  marginLeft: \"10px\",\r\n                  padding: \"10px 15px\",\r\n                  background: \"#4CAF50\",\r\n                  color: \"white\",\r\n                  border: \"none\",\r\n                  borderRadius: \"20px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              flex: 1,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              color: \"#666\",\r\n              fontSize: \"18px\",\r\n            }}\r\n          >\r\n            Select a chat to start messaging\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}